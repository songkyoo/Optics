// <auto-generated />
namespace Macaron.Optics;

partial class Getter
{
    public static Getter<T, TValue2> Compose<T, TValue1, TValue2>(
        Getter<T, TValue1> getter1,
        Getter<TValue1, TValue2> getter2
    )
    {
        return Getter<T, TValue2>.Of(
            getter: source =>
            {
                var value0 = source;
                var value1 = getter1.Get(value0);
                var value2 = getter2.Get(value1);

                return value2;
            }
        );
    }

    public static Getter<T, TValue3> Compose<T, TValue1, TValue2, TValue3>(
        Getter<T, TValue1> getter1,
        Getter<TValue1, TValue2> getter2,
        Getter<TValue2, TValue3> getter3
    )
    {
        return Getter<T, TValue3>.Of(
            getter: source =>
            {
                var value0 = source;
                var value1 = getter1.Get(value0);
                var value2 = getter2.Get(value1);
                var value3 = getter3.Get(value2);

                return value3;
            }
        );
    }

    public static Getter<T, TValue4> Compose<T, TValue1, TValue2, TValue3, TValue4>(
        Getter<T, TValue1> getter1,
        Getter<TValue1, TValue2> getter2,
        Getter<TValue2, TValue3> getter3,
        Getter<TValue3, TValue4> getter4
    )
    {
        return Getter<T, TValue4>.Of(
            getter: source =>
            {
                var value0 = source;
                var value1 = getter1.Get(value0);
                var value2 = getter2.Get(value1);
                var value3 = getter3.Get(value2);
                var value4 = getter4.Get(value3);

                return value4;
            }
        );
    }

    public static Getter<T, TValue5> Compose<T, TValue1, TValue2, TValue3, TValue4, TValue5>(
        Getter<T, TValue1> getter1,
        Getter<TValue1, TValue2> getter2,
        Getter<TValue2, TValue3> getter3,
        Getter<TValue3, TValue4> getter4,
        Getter<TValue4, TValue5> getter5
    )
    {
        return Getter<T, TValue5>.Of(
            getter: source =>
            {
                var value0 = source;
                var value1 = getter1.Get(value0);
                var value2 = getter2.Get(value1);
                var value3 = getter3.Get(value2);
                var value4 = getter4.Get(value3);
                var value5 = getter5.Get(value4);

                return value5;
            }
        );
    }

    public static Getter<T, TValue6> Compose<T, TValue1, TValue2, TValue3, TValue4, TValue5, TValue6>(
        Getter<T, TValue1> getter1,
        Getter<TValue1, TValue2> getter2,
        Getter<TValue2, TValue3> getter3,
        Getter<TValue3, TValue4> getter4,
        Getter<TValue4, TValue5> getter5,
        Getter<TValue5, TValue6> getter6
    )
    {
        return Getter<T, TValue6>.Of(
            getter: source =>
            {
                var value0 = source;
                var value1 = getter1.Get(value0);
                var value2 = getter2.Get(value1);
                var value3 = getter3.Get(value2);
                var value4 = getter4.Get(value3);
                var value5 = getter5.Get(value4);
                var value6 = getter6.Get(value5);

                return value6;
            }
        );
    }

    public static Getter<T, TValue7> Compose<T, TValue1, TValue2, TValue3, TValue4, TValue5, TValue6, TValue7>(
        Getter<T, TValue1> getter1,
        Getter<TValue1, TValue2> getter2,
        Getter<TValue2, TValue3> getter3,
        Getter<TValue3, TValue4> getter4,
        Getter<TValue4, TValue5> getter5,
        Getter<TValue5, TValue6> getter6,
        Getter<TValue6, TValue7> getter7
    )
    {
        return Getter<T, TValue7>.Of(
            getter: source =>
            {
                var value0 = source;
                var value1 = getter1.Get(value0);
                var value2 = getter2.Get(value1);
                var value3 = getter3.Get(value2);
                var value4 = getter4.Get(value3);
                var value5 = getter5.Get(value4);
                var value6 = getter6.Get(value5);
                var value7 = getter7.Get(value6);

                return value7;
            }
        );
    }

    public static Getter<T, TValue8> Compose<T, TValue1, TValue2, TValue3, TValue4, TValue5, TValue6, TValue7, TValue8>(
        Getter<T, TValue1> getter1,
        Getter<TValue1, TValue2> getter2,
        Getter<TValue2, TValue3> getter3,
        Getter<TValue3, TValue4> getter4,
        Getter<TValue4, TValue5> getter5,
        Getter<TValue5, TValue6> getter6,
        Getter<TValue6, TValue7> getter7,
        Getter<TValue7, TValue8> getter8
    )
    {
        return Getter<T, TValue8>.Of(
            getter: source =>
            {
                var value0 = source;
                var value1 = getter1.Get(value0);
                var value2 = getter2.Get(value1);
                var value3 = getter3.Get(value2);
                var value4 = getter4.Get(value3);
                var value5 = getter5.Get(value4);
                var value6 = getter6.Get(value5);
                var value7 = getter7.Get(value6);
                var value8 = getter8.Get(value7);

                return value8;
            }
        );
    }

}
